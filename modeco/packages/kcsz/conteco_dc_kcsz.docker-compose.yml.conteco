---
version: '3'
services:

# START SERVICE kafka_server.base
  kafka:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.kafka_server.base:5.4.0
    environment: ['KAFKA_HEAP_OPTS=-Xmx${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY} -Xms${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}','KAFKA_BROKER_ID=1','KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181','KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092${CONTECO_DC_KCSZ_KAFKA_KAFKA_ADVERTISED_LISTENERS}','KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT${CONTECO_DC_KCSZ_KAFKA_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}','KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT','KAFKA_AUTO_CREATE_TOPICS_ENABLE=true','KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1','KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0','KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR=1','KAFKA_METRIC_REPORTERS=io.confluent.metrics.reporter.ConfluentMetricsReporter','CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS=kafka:9092','CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT=zookeeper:2181','CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS=1','CONFLUENT_METRICS_ENABLE=true','CONFLUENT_SUPPORT_CUSTOMER_ID=anonymous','KAFKA_LOG_RETENTION_HOURS=1']
    command: []
    volumes: ['${CONTECO_STACKPREFIX}_kafka_secrets_volume:/etc/kafka/secrets','${CONTECO_STACKPREFIX}_kafka_data_volume:/var/lib/kafka/data']
    ports: [${CONTECO_DC_KCSZ_KAFKA_PORTS}]
    networks: [${CONTECO_NETWORKLOCAL}_overlay]
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_KAFKA_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      labels: []
# END SERVICE kafka_server.base

# START SERVICE zookeeper.base
  zookeeper:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.zookeeper.base:5.4.0
    environment: ['ZOOKEEPER_CLIENT_PORT=2181','ZOOKEEPER_TICK_TIME=2000']
    command: []
    volumes: ['${CONTECO_STACKPREFIX}_zookeeper_secrets_volume:/etc/zookeeper/secrets','${CONTECO_STACKPREFIX}_zookeeper_data_volume:/var/lib/zookeeper/data','${CONTECO_STACKPREFIX}_zookeeper_log_volume:/var/lib/zookeeper/log']
    ports: []
    networks: [${CONTECO_NETWORKLOCAL}_overlay]
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '${CONTECO_DC_KCSZ_ZOOKEEPER_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_ZOOKEEPER_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${CONTECO_DC_KCSZ_ZOOKEEPER_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_ZOOKEEPER_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      labels: [${CONTECO_DC_KCSZ_ZOOKEEPER_DEPLOY_LABELS}]
# END SERVICE zookeeper.base

# START SERVICE kafka_connect_datagen.base
  kafka_connect:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.kafka_connect_datagen.base:0.2.0-5.4.0
    environment: ['CONNECT_BOOTSTRAP_SERVERS=kafka:9092','CONNECT_ZOOKEEPER_CONNECT=zookeeper:2181','CONNECT_REST_ADVERTISED_HOST_NAME=kafka_connect','CONNECT_REST_PORT=8083','CONNECT_GROUP_ID=kafka_connect','CONNECT_CONFIG_STORAGE_TOPIC=kafka_connect_configs','CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1','CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000','CONNECT_OFFSET_STORAGE_TOPIC=kafka_connect_offsets','CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1','CONNECT_STATUS_STORAGE_TOPIC=kafka_connect_status','CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1','CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter','CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter','CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema_registry:8081','CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter','CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter','CONNECT_PRODUCER_CLASSPATH=/usr/share/java/monitoring-interceptors/monitoring-interceptors-5.4.0.jar','CONNECT_PRODUCER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor',\'
'CONNECT_CONSUMER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor','CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components','CONNECT_LOG4J_LOGGERS=org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR']
    command: []
    volumes: ['${CONTECO_STACKPREFIX}_kafka_connect_connect_secrets_volume:/etc/kafka-connect/secrets','${CONTECO_STACKPREFIX}_kafka_connect_secrets_volume:/etc/kafka/secrets','${CONTECO_STACKPREFIX}_kafka_connect_data_volume:/var/lib/kafka/data','${CONTECO_STACKPREFIX}_kafka_connect_jars_volume:/etc/kafka-connect/jars']
    ports: [${CONTECO_DC_KCSZ_KAFKA_CONNECT_PORTS}]
    networks: [${CONTECO_NETWORKLOCAL}_overlay]
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '${CONTECO_DC_KCSZ_KAFKA_CONNECT_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_KAFKA_CONNECT_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${CONTECO_DC_KCSZ_KAFKA_CONNECT_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_KAFKA_CONNECT_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      labels: []
# END SERVICE kafka_connect_datagen.base

# START SERVICE schema_registry.base
  schema_registry:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.schema_registry.base:5.4.0
    environment: ['SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181', 'SCHEMA_REGISTRY_HOST_NAME= schema_registry']
    command: []
    volumes: ['${CONTECO_STACKPREFIX}_schema_registry_secrets_volume:/etc/schema-registry/secrets']
    ports: [${CONTECO_DC_KCSZ_SCHEMA_REGISTRY_PORTS}]
    networks: [${CONTECO_NETWORKLOCAL}_overlay]
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '${CONTECO_DC_KCSZ_SCHEMA_REGISTRY_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_SCHEMA_REGISTRY_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${CONTECO_DC_KCSZ_SCHEMA_REGISTRY_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${CONTECO_DC_KCSZ_SCHEMA_REGISTRY_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      labels: []
# END SERVICE schema_registry.base

networks: {${CONTECO_NETWORKLOCAL}_overlay: { external: true }}
volumes: {${CONTECO_STACKPREFIX}_kafka_secrets_volume: { external: true },${CONTECO_STACKPREFIX}_kafka_data_volume: { external: true },${CONTECO_STACKPREFIX}_zookeeper_secrets_volume: { external: true },${CONTECO_STACKPREFIX}_zookeeper_data_volume: { external: true },${CONTECO_STACKPREFIX}_zookeeper_log_volume: { external: true },${CONTECO_STACKPREFIX}_kafka_connect_connect_secrets_volume: { external: true },${CONTECO_STACKPREFIX}_kafka_connect_secrets_volume: { external: true },${CONTECO_STACKPREFIX}_kafka_connect_data_volume: { external: true },${CONTECO_STACKPREFIX}_kafka_connect_jars_volume: { external: true },${CONTECO_STACKPREFIX}_schema_registry_secrets_volume: { external: true }}

