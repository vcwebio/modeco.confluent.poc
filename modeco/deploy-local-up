#!/usr/bin/env bash


prefix="module_confluent_poc_$2"

if [[ "module_confluent_poc_ekg_elasticsearch_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_ekg_elasticsearch_volume
	fi
	
if [[ "module_confluent_poc_ekg_grafana_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_ekg_grafana_volume
	fi
	
if [[ "module_confluent_poc_metrics_monitor_heartbeat_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_metrics_monitor_heartbeat_data_volume
	fi
	
if [[ "module_confluent_poc_metrics_monitor_heartbeat_monitors_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_metrics_monitor_heartbeat_monitors_volume
	fi
	
if [[ "module_confluent_poc_ingest_data_filebeat_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_ingest_data_filebeat_volume
	fi
	
if [[ "module_confluent_poc_kafka_connect_kafka_connect_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kafka_connect_kafka_connect_secrets_volume
	fi
	
if [[ "module_confluent_poc_kafka_connect_kafka_connect_connect_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kafka_connect_kafka_connect_connect_secrets_volume
	fi
	
if [[ "module_confluent_poc_kafka_connect_kafka_connect_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kafka_connect_kafka_connect_data_volume
	fi
	
if [[ "module_confluent_poc_kafka_connect_kafka_connect_jars_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kafka_connect_kafka_connect_jars_volume
	fi
	
if [[ "module_confluent_poc_kz_kafka_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kz_kafka_secrets_volume
	fi
	
if [[ "module_confluent_poc_kz_kafka_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kz_kafka_data_volume
	fi
	
if [[ "module_confluent_poc_kz_zookeeper_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kz_zookeeper_secrets_volume
	fi
	
if [[ "module_confluent_poc_kz_zookeeper_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kz_zookeeper_data_volume
	fi
	
if [[ "module_confluent_poc_kz_zookeeper_log_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_kz_zookeeper_log_volume
	fi
	
if [[ "module_confluent_poc_metrics_overlay_metrics_overlay_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_metrics_overlay_metrics_overlay_volume
	fi
	
if [[ "module_confluent_poc_processor_streamsets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create module_confluent_poc_processor_streamsets_volume
	fi
	
if [[ "module_confluent_poc_metrics_monitor_heartbeat_monitors_volume" == "$prefix"* ]] ; then
			executionplane --silent docker run -v module_confluent_poc_metrics_monitor_heartbeat_monitors_volume:/usr/share/heartbeat/monitors.d ${CONTECO_REGISTRY}$1 --interactive cp -r /modeco/volumes/metrics_monitor_heartbeat_monitors_volume/* /usr/share/heartbeat/monitors.d
		fi
		
